#! /usr/bin/env python

from gi.repository import Gtk, GLib
import os

class Battery():
    def __init__(self, id):
        self.id = id
        self.max = self.get("charge_full")
        self.orig_max = self.get("charge_full_design")
        self.update()
        GLib.timeout_add_seconds (1, self.update)

    def get (self, attr):
        with open (os.path.join ("/sys/class/power_supply",self.id,attr)) as f:
          return f.readline().strip()

    def update (self):
        self.now = self.get("charge_now")
        self.state = self.get("status") == "Charging"
        return True

    def get_percent (self):
        return int(self.now) / float(self.max)

    def __str__ (self):
        return "Battery %s: %.2f%% (%.2f%% of design capacity)" % (self.id, self.get_percent()*100, (int(self.now) / float(self.orig_max))*100)

class TrayIcon():
    def __init__(self):
        self.icon = Gtk.StatusIcon()
        self.icon.embedded = True;
        self.update_icon()
        self.icon.set_visible(True)
        GLib.timeout_add_seconds(5, self.update_icon, "acpi")

    def main(self):
        Gtk.main()

    def update_icon(self,command="acpi"):
        self.batteries = {}
        for entry in os.listdir ("/sys/class/power_supply"):
          if "BAT" in entry:
            self.batteries[entry] = Battery(entry)

        if not self.batteries:
          self.icon.set_from_stock(Gtk.STOCK_CONNECT)
          self.icon.set_tooltip_text("No battery found.")
          return True

        status = 0
        charging = False
        for battery in self.batteries:
          status += self.batteries[battery].get_percent()
          charging |= self.batteries[battery].state
        status /= len(self.batteries)
        if status < 0.25:   state = "crit"
        elif status < 0.5:  state = "low"
        elif status < 0.75: state = "high"
        else:               state = "full"

        self.icon.set_tooltip_text ("\n".join([str(self.batteries[battery]) for battery in self.batteries]))
        self.icon.set_from_file("/usr/share/pixmaps/battery/battery-"+state+("-full.png" if status==1 else "-loading.png" if charging else ".png"))
        return True

if __name__ == "__main__":
    i = TrayIcon()
    i.main()
